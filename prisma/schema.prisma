generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int             @id @default(autoincrement())
  name         String
  email        String          @unique(map: "User_email_key")
  phone        String
  password     String
  profile      String?
  role         user_role
  created_at   DateTime        @default(now())
  updated_at   DateTime

  // Relasi ke reservations
  reservations reservations[]  // relasi ke reservasi

  // Relasi ke tickets
  assignedTickets Ticket[]     @relation("AssignedTickets")
  createdTickets  Ticket[]     @relation("CreatedTickets")
}

enum user_role {
  admin
  user
}

model Class {
  id           Int             @id @default(autoincrement())
  name         String
  schedule     DateTime?
  quota        Int?
  location     String?
  trainer_name String?
  description  String?
  created_at   DateTime        @default(now())
  updated_at   DateTime        @updatedAt

  // Relasi ke reservations
  reservations reservations[]
}

model reservations {
  id          Int      @id @default(autoincrement())
  user_id     Int
  class_id    Int
  reserved_at DateTime @default(now())

  user        user     @relation(fields: [user_id], references: [id])
  class       Class    @relation(fields: [class_id], references: [id])
}

model Ticket {
  id            Int           @id @default(autoincrement())
  ticket_number String        @unique
  issue_title   String
  description   String
  assigned_to   Int?         
  created_by    Int
  status        TicketStatus  @default(open)
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt

  // Relasi ke user
  assignedTo    user?         @relation("AssignedTickets", fields: [assigned_to], references: [id])
  createdBy     user          @relation("CreatedTickets", fields: [created_by], references: [id])
}

enum TicketStatus {
  open
  in_progress
  closed
}
